{
  "version": 3,
  "file": "ngx-mat-codemirror.umd.js",
  "sources": [
    "ng://ngx-mat-codemirror/out/src/app/mat-codemirror/mat-codemirror.module.ts",
    "ng://ngx-mat-codemirror/out/src/app/mat-codemirror/mat-codemirror.component.ts"
  ],
  "sourcesContent": [
    "import { NgModule } from '@angular/core';\nimport { MatCodemirrorComponent } from './mat-codemirror.component';\n\n@NgModule({\n  declarations: [\n    MatCodemirrorComponent,\n  ],\n  exports: [\n    MatCodemirrorComponent,\n  ]\n})\nexport class MatCodemirrorModule {\n}\n",
    "import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  DoCheck,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  KeyValueDiffer,\n  KeyValueDiffers,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n  Self,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { Editor, EditorChangeLinkedList, EditorFromTextArea, ScrollInfo, } from 'codemirror';\nimport { MatFormFieldControl } from '@angular/material';\nimport { Subject } from 'rxjs/Subject';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n@Component({\n  selector: 'mat-codemirror',\n  template: `<textarea\n  [name]=\"name\"\n  class=\"ngx-codemirror {{ className }}\"\n  [class.ngx-codemirror--focused]=\"focused\"\n  autocomplete=\"off\"\n  [autofocus]=\"autoFocus\"\n  #ref>\n</textarea>\n`,\n  styles: [`.ngx-mat-codemirror .CodeMirror{height:auto}.ngx-mat-codemirror .CodeMirror-scroll{max-height:250px}`],\n  providers: [\n    {\n      provide: MatFormFieldControl,\n      useExisting: MatCodemirrorComponent\n    }\n  ],\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MatCodemirrorComponent implements AfterViewInit, OnDestroy, ControlValueAccessor, MatFormFieldControl<string>, DoCheck {\n\n  private static materialId = 0;\n\n  stateChanges = new Subject<void>();\n\n  @HostBinding() id = `mat-codemirror-component-${ MatCodemirrorComponent.materialId++ }`;\n\n  @HostBinding('attr.aria-describedby') describedBy = '';\n\n  private onChange = (_: string) => null;\n  private onTouched = () => null;\n\n  private _required = false;\n  private _focused = false;\n  private _disabled = false;\n  private _placeholder: string;\n  private _value = '';\n\n  private _differ: KeyValueDiffer<string, any>;\n  private _options: any;\n\n  @HostBinding('class.ngx-mat-codemirror') private ngxMatCodemirror = true;\n\n  /* class applied to the created textarea */\n  @Input() className = '';\n  /* name applied to the created textarea */\n  @Input() name = 'codemirror';\n  /* autofocus setting applied to the created textarea */\n  @Input() autoFocus = false;\n\n  /* preserve previous scroll position after updating value */\n  @Input() preserveScrollPosition = false;\n  /* called when the text cursor is moved */\n  @Output() cursorActivity = new EventEmitter<Editor>();\n  /* called when the editor is focused or loses focus */\n  @Output() focusChange = new EventEmitter<boolean>();\n  /* called when the editor is scrolled */\n  @Output() scroll = new EventEmitter<ScrollInfo>();\n\n  @ViewChild('ref') ref: ElementRef;\n\n  codeMirror: EditorFromTextArea;\n\n  constructor(\n    @Optional() @Self() public ngControl: NgControl, // mat\n    private _differs: KeyValueDiffers,\n    private _ngZone: NgZone\n  ) {\n    if (this.ngControl != null) {\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  @HostBinding('class.floating')\n  get shouldLabelFloat() {\n    return this.focused || !this.empty;\n  }\n\n  setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  onContainerClick(event: MouseEvent) {}\n\n  @Input()\n  get required() {\n    return this._required;\n  }\n\n  set required(req) {\n    this._required = coerceBooleanProperty(req);\n    this.stateChanges.next();\n  }\n\n  get errorState() {\n    return this.ngControl && !this.ngControl.pristine && !this.ngControl.valid;\n  }\n\n  @Input()\n  get placeholder() {\n    return this._placeholder;\n  }\n\n  set placeholder(plh) {\n    this._placeholder = plh;\n    this.stateChanges.next();\n  }\n\n  get empty() {\n    return !this.value;\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  set value(value: string) {\n    this._value = value;\n    this.updateLineNumbers();\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get disabled() {\n    return this._disabled;\n  }\n\n  set disabled(dis) {\n    this._disabled = coerceBooleanProperty(dis);\n    this.stateChanges.next();\n  }\n\n  get focused() {\n    return this._focused;\n  }\n\n  set focused(val) {\n    this._focused = val;\n    this.stateChanges.next();\n  }\n\n  /**\n   * set options for codemirror\n   * @link http://codemirror.net/doc/manual.html#config\n   */\n  @Input()\n  set options(value: { [key: string]: any }) {\n    this._options = value;\n    if (!this._differ && value) {\n      this._differ = this._differs.find(value).create();\n    }\n  }\n\n  ngAfterViewInit() {\n    if (!this.ref) {\n      return;\n    }\n    // in order to allow for universal rendering, we import Codemirror runtime with `require` to prevent node errors\n    const {fromTextArea} = require('codemirror');\n\n    this.codeMirror = fromTextArea(this.ref.nativeElement, this._options);\n    this.updateLineNumbers();\n    this._ngZone.runOutsideAngular(() => {\n      this.codeMirror.on('change', this.codemirrorValueChanged.bind(this));\n      this.codeMirror.on('cursorActivity', this.cursorActive.bind(this));\n      this.codeMirror.on('focus', this.focusChanged.bind(this, true));\n      this.codeMirror.on('blur', this.focusChanged.bind(this, false));\n      this.codeMirror.on('scroll', this.scrollChanged.bind(this));\n    });\n    this.codeMirror.setValue(this.value);\n  }\n\n  ngDoCheck() {\n    if (this._differ) {\n      // check options have not changed\n      const changes = this._differ.diff(this._options);\n      if (changes) {\n        changes.forEachChangedItem(option =>\n          this.setOptionIfChanged(option.key, option.currentValue),\n        );\n        changes.forEachAddedItem(option =>\n          this.setOptionIfChanged(option.key, option.currentValue),\n        );\n        changes.forEachRemovedItem(option =>\n          this.setOptionIfChanged(option.key, option.currentValue),\n        );\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    // is there a lighter-weight way to remove the cm instance?\n    if (this.codeMirror) {\n      this.codeMirror.toTextArea();\n    }\n\n    this.stateChanges.complete();\n  }\n\n  codemirrorValueChanged(cm: Editor, change: EditorChangeLinkedList) {\n    if (change.origin !== 'setValue') {\n      this.value = cm.getValue();\n      this.writeValue(cm.getValue());\n    }\n  }\n\n  setOptionIfChanged(optionName: string, newValue: any) {\n    if (!this.codeMirror) {\n      return;\n    }\n    this.codeMirror.setOption(optionName, newValue);\n  }\n\n  focusChanged(focused: boolean) {\n    this.onTouched();\n    this.focused = focused;\n    this.focusChange.emit(focused);\n  }\n\n  scrollChanged(cm: Editor) {\n    this.scroll.emit(cm.getScrollInfo());\n  }\n\n  cursorActive(cm: Editor) {\n    this.cursorActivity.emit(cm);\n  }\n\n  writeValue(value: string): void {\n    if (value === null) {\n      return;\n    }\n    if (value && !this.codeMirror) {\n      this.value = value;\n      return;\n    }\n    if (\n      value &&\n      value !== this.codeMirror.getValue() &&\n      this.normalizeLineEndings(this.codeMirror.getValue()) !==\n      this.normalizeLineEndings(value)\n    ) {\n      this.value = value;\n      if (this.preserveScrollPosition) {\n        const prevScrollPosition = this.codeMirror.getScrollInfo();\n        this.codeMirror.setValue(this.value);\n        this.codeMirror.scrollTo(\n          prevScrollPosition.left,\n          prevScrollPosition.top,\n        );\n        return;\n      }\n      this.codeMirror.setValue(this.value);\n      // Don't call onChange value is from ngModel\n      return;\n    }\n    this.onChange(this.value);\n  }\n\n  registerOnChange(fn: (value: string) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this.setOptionIfChanged('readOnly', this.disabled);\n  }\n\n  private normalizeLineEndings(str: string) {\n    return (str || '').replace(/\\r\\n|\\r/g, '\\n');\n  }\n\n  private updateLineNumbers() {\n    if (this.codeMirror) {\n      this.codeMirror.setOption('lineNumbers', !!/\\n/.test(this._value));\n    }\n  }\n\n}\n"
  ],
  "names": [
    "NgModule",
    "Input",
    "HostBinding",
    "ViewChild",
    "Output",
    "NgZone",
    "KeyValueDiffers",
    "NgControl",
    "Optional",
    "Self",
    "ViewEncapsulation",
    "ChangeDetectionStrategy",
    "MatFormFieldControl",
    "Component",
    "coerceBooleanProperty",
    "EventEmitter",
    "Subject"
  ],
  "mappings": "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"
}
